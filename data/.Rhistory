install.packages("ggplot2")
install.packages("psych")
library(psych)
library(ggplot2)
install.packages('nlme')
library(nlme)
agg.or.pers <- read.delim("~/agg.or.pers.txt")
View(agg.or.pers)
agg<-agg.or.pers
agg$sub<-as.factor(agg$sub)
agg$gender<-as.factor(agg$gender)
str(agg)
aov.agg<-aov(maxibi~(fair*emo*touch)+Error(sub/(fair*emo*touch)),agg)
summary(aov.agg)
aov.agg<-aov(accept~(fair*emo*touch)+Error(sub/(fair*emo*touch)),agg)
summary(aov.agg)
baseline <- lme(maxibi ~ 1, random = ~1 | sub/fair/emo/touch, data = agg, method = "ML")
summary(baseline)
fairModel <- lme(maxibi ~ fair, random = ~1 | sub/fair/emo/touch, data = agg,
method = "ML")
anova(baseline,fairModel)
fairModel <- lme(maxibi ~ fair+emo+touch, random = ~1 | sub/fair/emo/touch, data = agg,
method = "ML")
summary(fairModel)
anova(baseline,fairModel)
fullModel <- lme(maxibi ~ fair*emo*touch, random = ~1 | sub/fair/emo/touch, data = agg,
method = "ML")
summary(fullModel)
anova(baseline,fairModel,fullModel)
bisModel <- lme(maxibi ~ fair*emo*touch*BIS, random = ~1 | sub/fair/emo/touch/BIS, data = agg,
method = "ML")
summary(bisModel)
library("lme4", lib.loc="C:/Programs/R/R-3.2.3-Aalto/library")
summary(aov.agg)
aov.accept<-aov(accept~(fair*emo*touch)+Error(sub/(fair*emo*touch)),agg)
aov.maxibi<-aov(maxibi~(fair*emo*touch)+Error(sub/(fair*emo*touch)),agg)
summary(aov.maxibi)
summary(aov.accept)
agg$Magree<-as.factor(agg$Magree)
agg$Mextra<-as.factor(agg$Mextra)
agg$Mconsci<-as.factor(agg$Mconsci)
agg$Mcopen<-as.factor(agg$Mopen)
agg$Mopen<-as.factor(agg$Mopen)
agg$Mneurot<-as.factor(agg$Mneurot)
agg$Mbis<-as.factor(agg$Mbis)
agg$Mbas.drive<-as.factor(agg$Mbas.drive)
agg$Mbas.rew<-as.factor(agg$Mbas.rew)
agg$Mabas.fun<-as.factor(agg$Mabas.fun)
agg$Mjust.V<-as.factor(agg$Mjust.V)
agg$Mjust.Ob<-as.factor(agg$Mjust.Ob)
agree.maxibi<-aov(maxibi~(fair*emo*touch*Magree)+Error(sub/(fair*emo*touch))+(Magree),agg)
summary(agree.maxibi)
extra.maxibi<-aov(maxibi~(fair*emo*touch*Mextra)+Error(sub/(fair*emo*touch))+(Mextra),agg)
summary(extra.maxibi)
neurot.maxibi<-aov(maxibi~(fair*emo*touch*Mneurot)+Error(sub/(fair*emo*touch))+(Mneurot),agg)
summary(neurot.maxibi)
consci.maxibi<-aov(maxibi~(fair*emo*touch*Mconsci)+Error(sub/(fair*emo*touch))+(Mconsci),agg)
summary(consci.maxibi)
open.maxibi<-aov(maxibi~(fair*emo*touch*Mopen)+Error(sub/(fair*emo*touch))+(Mopen),agg)
summary(open.maxibi)
JUSTV.maxibi<-aov(maxibi~(fair*emo*touch*Mjust.V)+Error(sub/(fair*emo*touch))+(Mjust.V),agg)
summary(JUSTV.maxibi)
JUSTO.maxibi<-aov(maxibi~(fair*emo*touch*Mjust.Ob)+Error(sub/(fair*emo*touch))+(Mjust.Ob),agg)
summary(JUSTO.maxibi)
bis.maxibi<-aov(maxibi~(fair*emo*touch*Mbis)+Error(sub/(fair*emo*touch))+(Mbis),agg)
summary(bis.maxibi)
basdr.maxibi<-aov(maxibi~(fair*emo*touch*Mbas.drive)+Error(sub/(fair*emo*touch))+(Mbas.drive),agg)
summary(basdr.maxibi)
basre.maxibi<-aov(maxibi~(fair*emo*touch*Mbas.rew)+Error(sub/(fair*emo*touch))+(Mbas.rew),agg)
summary(basre.maxibi)
basfun.maxibi<-aov(maxibi~(fair*emo*touch*Mabas.fun)+Error(sub/(fair*emo*touch))+(Mabas.fun),agg)
summary(basfun.maxibi)
install.packages("dplyr")
install.packages("tidyr")
install.packages("ggplot2")
"hello world"
x<-5
x+5
x<-fuction(a,b) {a+2}
m1<- c(50.5, 30.5, 120.0)
m2<- c(5,2,10)
data.example1 <- data.frame(m1, m2)
View(data.example1)
View(data.example1)
data.example1$m1
data.example1$id <- c(101,102,103)
view(data.example1)
View(data.example1)
View(data.example1)
data.example1$zerror <- m2/m1
View(data.example1)
str(data.example1)
library(dplyr)
library(tidyr)
library(ggplot2)
r.clinic <- read.table("//home.org.aalto.fi/harjunv1/data/Desktop/r-clinic/r-clinic/r-clinic.R", header=TRUE, quote="\"")
View(r.clinic)
library(lattice)
setwd("//home.org.aalto.fi/harjunv1/data/Desktop/r-clinic/r-clinic")
data.clinic <- rwad.table("data/r-clinic1.csv", headet = T, sep "", dec =",")
data.clinic <- read.table("data/r-clinic1.csv", headet = T, sep "", dec =",")
data.clinic <- read.table("data/r-clinic1.csv", headet = T, sep ",", dec =",")
r.clinic
data.clinic <- read.table("data/r-clinic1.csv", header = T, sep = "", dec = ".")
head(data.clinic)
View(data.clinic)
View(data.clinic)
data.clinic %>% select(matches("time"))
data.clinic.long <-
data.clinic %>%  # use the original data
select(matches("id"), matches("time")) %>%  # Select only id and time vars.
gather("condition", "time", time.a.1:time.b.3)  # wide->long
View(data.clinic.long)
View(data.clinic.long)
data.clinic.long <-
data.clinic.long %>%
mutate(task = ifelse(grepl("1", condition), 1,
ifelse(grepl("2", condition), 2,
ifelse(grepl("3", condition), 3, NA))))
View(data.clinic.long)
View(data.clinic.long)
data.clinic.long <-
data.clinic.long %>%
mutate(cond = ifelse(grepl("a", condition), a,
ifelse(grepl("b", condition), b, NA))))
data.clinic.long <-
read.table("data/r-clinic1.csv", header = T, sep = "", dec = ".") %>%
select(matches("id"), matches("time")) %>%  # Select only id and time vars.
gather("condition", "time", time.a.1:time.b.3) %>%  # wide->long
mutate(task = ifelse(grepl("1", condition), 1,
ifelse(grepl("2", condition), 2,
ifelse(grepl("3", condition), 3, NA)))) %>%  # get the task
mutate(condition = ifelse(grepl("a", condition), "a",
ifelse(grepl("b", condition), "b", NA))) %>%  # condition
select(id,condition,task,time) %>%  # reorder columns
arrange(id,condition,task)
View(data.clinic.long)
View(data.clinic.long)
load("~/rville_demo/rville_demo.Rproj")
?write.csv
write.table(data14, file = "learning2014", sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = TRUE,
col.names = TRUE)
learning2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", header = T)
dim(learning2014)
str(learning2014)
attach(learning2014)
learning2014$deep <- (D03 + D11 + D19 + D27 + D07 + D14 + D22 + D30 + D06 + D15 + D23 + D31)/12
learning2014$surf <- (SU02 + SU10 + SU18 + SU26 + SU05 + SU13 + SU21 + SU29 + SU08 + SU16 + SU24 + SU32)/12
learning2014$stra <- (ST01 + ST09 + ST17 + ST25 + ST04 + ST12 + ST20 + ST28)/8
str(learning2014)
data14 <- subset(learning2014, Points != 0, select= Age:stra)
setwd("//home.org.aalto.fi/harjunv1/data/Desktop/GitHub/IODS_project/data")
write.table(data14, file = "learning2014", sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = TRUE,
col.names = TRUE)
write.table(data14, file = "learning2014.csv", sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = TRUE,
col.names = TRUE)
read.csv(file = "learning2014.csv", header = TRUE)
Data_new = read.csv(file = "learning2014.csv", header = TRUE)
head(Data_new)
str(Data_new)
Data_new = read.csv(file = "learning2014.csv", header = TRUE)
setwd("//home.org.aalto.fi/harjunv1/data/Desktop/GitHub/IODS_project/data")
Data_new = read.csv(file = "learning2014.csv", header = TRUE)
Data_new = read.csv(file = "learning2014.csv", header = TRUE)
Data_new = read.csv(file = "data/learning2014.csv", header = TRUE)
head(Data_new)
str(Data_new)
Data14 = read.csv(file = "data/learning2014.csv", header = TRUE)
dim(Data_new)
str(Data_new)
Data14 <- Data14[,c(4,1,2,3,5,6,7)]
str(Data14)
pairs(Data14[-1])
pairs(Data14[-1], col = learning2014$gender)
library(GGally)
library(ggplot2)
install.packages(GGally)
install.packages("GGally")
library(GGally)
library(GGally)
library("GGally", lib.loc="C:/Programs/R/R-3.3.2-Aalto/library")
install.packages(c("ggplot2", "tidyverse"))
library(GGally)
eplorative_plot <- ggpairs(Data14, mapping = aes(col = gender), lower = list(combo = wrap("facethist", bins = 20)))
library(ggplot2)
eplorative_plot <- ggpairs(Data14, mapping = aes(col = gender), lower = list(combo = wrap("facethist", bins = 20)))
explorative_plot <- ggpairs(Data14, mapping = aes(col = gender), lower = list(combo = wrap("facethist", bins = 20)))
explorative_plot
